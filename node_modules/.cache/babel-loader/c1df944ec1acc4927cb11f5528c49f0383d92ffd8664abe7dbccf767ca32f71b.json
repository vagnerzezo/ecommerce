{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.categories, category => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: category\n    }, _toDisplayString(category), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$options","categories","category","key","_toDisplayString"],"sources":["/Users/vagnerzezo/Documents/development/project/ecommerce/src/components/header/category.vue"],"sourcesContent":["<template>\n  <div>\n    <ul>\n      <li v-for=\"category in categories\" :key=\"category\">\n        {{ category }}</li>\n    </ul>\n  </div>\n</template>\n<script>\n\nexport default {\n  name: 'categoria',\n  computed: {\n    categories() {\n      return this.$store.getters.allCategories; // Acessando o getter 'allCategories' do Vuex\n    }\n  },\n  mounted() {\n    this.fetchCategories(); // Chama a ação 'fetchCategories' quando o componente é montado\n  },\n  methods: {\n    fetchCategories() {\n      this.$store.dispatch('fetchCategories'); // Dispara a ação 'fetchCategories' para buscar as categorias\n    }\n  }\n}\n</script>"],"mappings":";;uBACEA,mBAAA,CAKM,cAJJC,mBAAA,CAGK,c,kBAFHD,mBAAA,CACqBE,SAAA,QAJ3BC,WAAA,CAG6BC,QAAA,CAAAC,UAAU,EAAtBC,QAAQ;yBAAnBN,mBAAA,CACqB;MADeO,GAAG,EAAED;IAAQ,GAAAE,gBAAA,CAC5CF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}