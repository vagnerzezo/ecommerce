{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nconst store = createStore({\n  state: {\n    products: [],\n    cart: [],\n    categories: [],\n    // Adicionando uma nova propriedade para armazenar as categorias\n    token: null\n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products;\n    },\n    addToCart(state, product) {\n      state.cart.push(product);\n    },\n    removeFromCart(state, productId) {\n      state.cart = state.cart.filter(product => product.id !== productId);\n    },\n    clearCart(state) {\n      state.cart = [];\n    },\n    setCategories(state, categories) {\n      state.categories = categories;\n    },\n    setToken(state, token) {\n      state.token = token;\n    }\n  },\n  actions: {\n    fetchProducts({\n      commit\n    }) {\n      axios.get('https://fakestoreapi.com/products').then(response => {\n        commit('setProducts', response.data);\n      });\n    },\n    addProductToCart({\n      commit\n    }, product) {\n      commit('addToCart', product);\n    },\n    removeProductFromCart({\n      commit\n    }, productId) {\n      commit('removeFromCart', productId);\n    },\n    clearCart({\n      commit\n    }) {\n      commit('clearCart');\n    },\n    fetchCategories({\n      commit\n    }) {\n      fetch('https://fakestoreapi.com/products/categories').then(res => res.json()).then(categories => {\n        commit('setCategories', categories);\n      });\n    },\n    userLogin({\n      commit\n    }) {\n      return fetch('https://fakestoreapi.com/auth/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: \"mor_2314\",\n          password: \"83r5^_\"\n        })\n      }).then(res => res.json()).then(data => {\n        commit('setToken', data.token);\n        return data;\n      });\n    }\n  },\n  getters: {\n    allProducts: state => state.products,\n    cartProducts: state => state.cart,\n    allCategories: state => state.categories,\n    isAuthenticated: state => !!state.token\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","products","cart","categories","token","mutations","setProducts","addToCart","product","push","removeFromCart","productId","filter","id","clearCart","setCategories","setToken","actions","fetchProducts","commit","get","then","response","data","addProductToCart","removeProductFromCart","fetchCategories","fetch","res","json","userLogin","method","body","JSON","stringify","username","password","getters","allProducts","cartProducts","allCategories","isAuthenticated"],"sources":["/Users/vagnerzezo/Documents/development/project/ecommerce/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport axios from 'axios';\n\nconst store = createStore({\n  state: {\n    products: [],\n    cart: [],\n    categories: [], // Adicionando uma nova propriedade para armazenar as categorias\n    token: null \n  },\n  mutations: {\n    setProducts(state, products) {\n      state.products = products;\n    },\n    addToCart(state, product) {\n      state.cart.push(product);\n    },\n    removeFromCart(state, productId) {\n      state.cart = state.cart.filter(product => product.id !== productId);\n    },\n    clearCart(state) {\n      state.cart = [];\n    },\n    setCategories(state, categories) {\n      state.categories = categories;\n    },\n    setToken(state, token) {\n      state.token = token;\n    }\n  },\n  actions: {\n    fetchProducts({ commit }) {\n      axios.get('https://fakestoreapi.com/products')\n        .then(response => {\n          commit('setProducts', response.data);\n        });\n    },\n    addProductToCart({ commit }, product) {\n      commit('addToCart', product);\n    },\n    removeProductFromCart({ commit }, productId) {\n      commit('removeFromCart', productId);\n    },\n    clearCart({ commit }) {\n      commit('clearCart');\n    },\n    fetchCategories({ commit }) {\n      fetch('https://fakestoreapi.com/products/categories')\n        .then(res => res.json())\n        .then(categories => {\n          commit('setCategories', categories);\n        });\n    },\n    userLogin({ commit }) {\n      return fetch('https://fakestoreapi.com/auth/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: \"mor_2314\",\n          password: \"83r5^_\"\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          commit('setToken', data.token);\n          return data; \n        });\n    }\n  },\n  getters: {\n    allProducts: state => state.products,\n    cartProducts: state => state.cart,\n    allCategories: state => state.categories,\n    isAuthenticated: state => !!state.token \n  }\n});\n\nexport default store;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}