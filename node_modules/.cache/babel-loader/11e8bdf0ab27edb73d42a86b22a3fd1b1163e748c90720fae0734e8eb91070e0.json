{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.categories, cat => {\n    return _openBlock(), _createElementBlock(\"li\", _hoisted_1, _toDisplayString(_ctx.item.message), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_Fragment","_renderList","$options","categories","cat","_hoisted_1","_toDisplayString","_ctx","item","message"],"sources":["/Users/vagnerzezo/Documents/development/project/ecommerce/src/components/header/category.vue"],"sourcesContent":["<template>\n  <ul>\n    <li v-for=\"cat in categories\" :key=\"\">\n      {{ item.message }}\n    </li>\n  </ul>\n\n</template>\n<script>\n\nexport default {\n  name: 'categoria',\n  computed: {\n    categories() {\n      return this.$store.getters.allCategories; // Acessando o getter 'allCategories' do Vuex\n    }\n  },\n  mounted() {\n    this.fetchCategories(); // Chama a ação 'fetchCategories' quando o componente é montado\n  },\n  methods: {\n    fetchCategories() {\n      this.$store.dispatch('fetchCategories'); // Dispara a ação 'fetchCategories' para buscar as categorias\n    }\n  }\n}\n</script>"],"mappings":";;EAEmCA,GAAG,EAAJ;AAAO;;uBADvCC,mBAAA,CAIK,c,kBAHHA,mBAAA,CAEKC,SAAA,QAJTC,WAAA,CAEsBC,QAAA,CAAAC,UAAU,EAAjBC,GAAG;yBAAdL,mBAAA,CAEK,MAFLM,UAEK,EAAAC,gBAAA,CADAC,IAAA,CAAAC,IAAI,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}